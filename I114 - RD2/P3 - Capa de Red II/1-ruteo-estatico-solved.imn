node n1 {
    type router
    model router
    network-config {
	hostname n1
	!
	interface eth2
	 ip address 192.168.11.5/30
	!
	interface eth1
	 ip address 192.168.11.1/30
	!
	interface eth0
	 ip address 192.168.11.17/29
	!
    }
    canvas c1
    iconcoords {433.0 88.0}
    labelcoords {433.0 116.0}
    interface-peer {eth0 n6}
    interface-peer {eth1 n2}
    interface-peer {eth2 n3}
    services {IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	/sbin/ip route add 192.168.11.128/26 via 192.168.11.2
	/sbin/ip route add 192.168.11.64/26 via 192.168.11.6
	/sbin/ip route add 192.168.11.8/30 via 192.168.11.6
	
	}
    }
}

node n2 {
    type router
    model host
    network-config {
	hostname n2
	!
	interface eth2
	 ip address 192.168.11.129/26
	!
	interface eth1
	 ip address 192.168.11.10/30
	!
	interface eth0
	 ip address 192.168.11.2/30
	!
    }
    canvas c1
    iconcoords {241.0 218.0}
    labelcoords {241.0 244.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n3}
    interface-peer {eth2 n4}
    services {IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	
	/sbin/ip route add 192.168.11.64/26 via 192.168.11.9
	/sbin/ip route add 192.168.11.4/30 via 192.168.11.9
	/sbin/ip route add 192.168.11.16/29 via 192.168.11.1
	}
    }
}

node n3 {
    type router
    model router
    network-config {
	hostname n3
	!
	interface eth2
	 ip address 192.168.11.65/26
	!
	interface eth1
	 ip address 192.168.11.9/30
	!
	interface eth0
	 ip address 192.168.11.6/30
	!
    }
    canvas c1
    iconcoords {534.0 256.0}
    labelcoords {534.0 284.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n2}
    interface-peer {eth2 n5}
    services {IPForward StaticRoute}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	/sbin/ip route add 192.168.11.128/26 via 192.168.11.10
	/sbin/ip route add 192.168.11.0/30 via 192.168.11.10
	/sbin/ip route add 192.168.11.16/29 via 192.168.11.5
	}
    }
}

node n4 {
    type lanswitch
    network-config {
	hostname n4
	!
    }
    canvas c1
    iconcoords {165.0 346.0}
    labelcoords {165.0 370.0}
    interface-peer {e0 n2}
    interface-peer {e1 n9}
    interface-peer {e2 n8}
    interface-peer {e3 n7}
}

node n5 {
    type hub
    network-config {
	hostname n5
	!
    }
    canvas c1
    iconcoords {732.0 310.0}
    labelcoords {732.0 334.0}
    interface-peer {e0 n3}
    interface-peer {e1 n10}
    interface-peer {e2 n11}
    interface-peer {e3 n12}
}

node n6 {
    type router
    model host
    network-config {
	hostname n6
	!
	interface eth0
	 ip address 192.168.11.18/29
	!
    }
    canvas c1
    iconcoords {713.0 88.0}
    labelcoords {713.0 120.0}
    interface-peer {eth0 n1}
    services {DefaultRoute SSH}
}

node n7 {
    type router
    model PC
    network-config {
	hostname n7
	!
	interface eth0
	 ip address 192.168.11.132/26
	!
    }
    canvas c1
    iconcoords {69.0 488.0}
    labelcoords {69.0 520.0}
    interface-peer {eth0 n4}
    services {DefaultRoute}
}

node n8 {
    type router
    model PC
    network-config {
	hostname n8
	!
	interface eth0
	 ip address 192.168.11.131/26
	!
    }
    canvas c1
    iconcoords {238.0 504.0}
    labelcoords {238.0 536.0}
    interface-peer {eth0 n4}
    services {DefaultRoute}
}

node n9 {
    type router
    model PC
    network-config {
	hostname n9
	!
	interface eth0
	 ip address 192.168.11.130/26
	!
    }
    canvas c1
    iconcoords {316.0 411.0}
    labelcoords {316.0 443.0}
    interface-peer {eth0 n4}
    services {DefaultRoute}
}

node n10 {
    type router
    model PC
    network-config {
	hostname n10
	!
	interface eth0
	 ip address 192.168.11.68/26
	!
    }
    canvas c1
    iconcoords {566.0 409.0}
    labelcoords {566.0 441.0}
    interface-peer {eth0 n5}
    services {DefaultRoute}
}

node n11 {
    type router
    model PC
    network-config {
	hostname n11
	!
	interface eth0
	 ip address 192.168.11.67/26
	!
    }
    canvas c1
    iconcoords {665.0 484.0}
    labelcoords {665.0 516.0}
    interface-peer {eth0 n5}
    services {DefaultRoute}
}

node n12 {
    type router
    model PC
    network-config {
	hostname n12
	!
	interface eth0
	 ip address 192.168.11.66/26
	!
    }
    canvas c1
    iconcoords {831.0 463.0}
    labelcoords {831.0 495.0}
    interface-peer {eth0 n5}
    services {DefaultRoute}
}

link l1 {
    nodes {n1 n6}
    bandwidth 0
}

link l2 {
    nodes {n2 n1}
    bandwidth 0
}

link l3 {
    nodes {n1 n3}
    bandwidth 0
}

link l4 {
    nodes {n2 n3}
    bandwidth 0
}

link l5 {
    nodes {n2 n4}
    bandwidth 0
}

link l6 {
    nodes {n3 n5}
    bandwidth 0
}

link l7 {
    nodes {n5 n10}
    bandwidth 0
}

link l8 {
    nodes {n11 n5}
    bandwidth 0
}

link l9 {
    nodes {n5 n12}
    bandwidth 0
}

link l10 {
    nodes {n4 n9}
    bandwidth 0
}

link l11 {
    nodes {n8 n4}
    bandwidth 0
}

link l12 {
    nodes {n7 n4}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names yes
    ip_addresses yes
    ipv6_addresses no
    node_labels yes
    link_labels no
    show_api no
    background_images no
    annotations no
    grid no
    traffic_start 0
}

option session {
}

